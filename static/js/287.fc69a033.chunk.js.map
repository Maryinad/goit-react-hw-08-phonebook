{"version":3,"file":"static/js/287.fc69a033.chunk.js","mappings":"kRAEaA,EAAYC,EAAAA,GAAAA,KAAH,kVAeTC,EAAYD,EAAAA,GAAAA,IAAH,uJAQTE,EAAYF,EAAAA,GAAAA,MAAH,4IAgBTG,GAPcH,EAAAA,GAAAA,MAAH,uGAOCA,EAAAA,GAAAA,MAAH,wHAcTI,GAPcJ,EAAAA,GAAAA,MAAH,uHAOLA,EAAAA,GAAAA,OAAH,wO,SCxCT,SAASK,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QAC3B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,KAEzBC,EAAAA,EAAAA,YAAU,WACK,OAATF,GAAeL,EAAS,YAC7B,GAAE,CAACK,EAAML,IAEV,IAAMQ,EAAU,CACdhB,KAAMC,EACNC,MAAOC,EACPC,SAAUC,GAGNY,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MACdJ,EAAQhB,GAAMoB,EACf,EAUD,OACE,UAAC7B,EAAD,CAAW8B,SAVQ,SAAAH,GACnBA,EAAMI,iBAEJhB,EADER,GACOyB,EAAAA,EAAAA,IAAa,CAAErB,MAAAA,EAAOE,SAAAA,KAEtBoB,EAAAA,EAAAA,IAAgB,CAAExB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAE3C,EAGC,WACIN,IACA,SAACL,EAAD,WACE,UAACC,EAAD,YACE,sCACA,SAACC,EAAD,CACE8B,KAAK,OACLzB,KAAK,OACL0B,YAAa,oBACbC,UAAQ,EACRC,SAAUX,UAKlB,SAACxB,EAAD,WACE,UAACC,EAAD,YACE,uCACA,SAACC,EAAD,CACE8B,KAAK,QACLzB,KAAK,QACL0B,YAAa,qBACbC,UAAQ,EACRC,SAAUX,UAIhB,SAACxB,EAAD,WACE,UAACC,EAAD,YACE,0CACA,SAACC,EAAD,CACE8B,KAAK,WACLzB,KAAK,WACL6B,UAAW,EACXH,YAAa,wBACbC,UAAQ,EACRC,SAAUX,UAIhB,gCACGP,IAAa,SAACoB,EAAA,EAAD,KACd,SAAClC,EAAD,CAAK6B,KAAK,SAAV,SAAqB3B,EAAsB,SAAZ,iBAItC,C,yECvFD,UALA,WACE,IAAMA,GAAUa,EAAAA,EAAAA,KAAY,SAAAoB,GAAK,OAAIA,EAAMC,KAAKC,UAAf,IACjC,OAAO,SAAC,IAAD,CAAYnC,QAASA,GAC7B,C","sources":["components/SigninForm/SigninForm.styled.js","components/SigninForm/SignInForm.jsx","pages/SigninPage/Signin.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormField = styled.form`\n  // margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  /* align-items: flex-start; */\n  /* justify-content: center; */\n  /* align-items: center; */\n  /* min-width: 300px; */\n  /* max-width: 700px; */\n  width: 600px;\n  margin: 50px auto;\n  align-items: flex-start;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nexport const TitleName = styled.label`\n  display: flex;\n  font-size: 32px;\n  color: #fd7272;\n  font-weight: 700;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const TitleNumber = styled.label`\n  display: block;\n  font-size: 32px;\n  color: #fd7272;\n  font-weight: 700;\n`;\n\nexport const InputName = styled.input`\n  border: 3px solid #2c3a47;\n  min-width: 200px;\n  min-height: 30px;\n  border-radius: 4px;\n`;\n\nexport const InputNumber = styled.input`\n  border: 3px solid #2c3a47;\n  min-width: 200px;\n  min-height: 30px;\n  border-radius: 4px;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin-top: 20px;\n  padding: 15px 25px;\n  font-size: 22px;\n  font-weight: 700;\n  background-color: #fd7272;\n  color: white;\n  border-radius: 4px;\n  border: none;\n  width: 100%;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { loginRequest, registerRequest } from 'redux/auth/usersOperation';\nimport { selectIsLoadingAuth, selectUserName } from 'redux/selectors';\nimport {\n  Btn,\n  Container,\n  FormField,\n  InputName,\n  TitleName,\n} from './SigninForm.styled';\n\nexport function SignInForm({ isLogin }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const isLoading = useSelector(selectIsLoadingAuth);\n  const user = useSelector(selectUserName);\n\n  useEffect(() => {\n    if (user !== null) navigate('/contacts');\n  }, [user, navigate]);\n\n  const userMap = {\n    name: setName,\n    email: setEmail,\n    password: setPassword,\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    userMap[name](value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (isLogin) {\n      dispatch(loginRequest({ email, password }));\n    } else {\n      dispatch(registerRequest({ name, email, password }));\n    }\n  };\n\n  return (\n    <FormField onSubmit={handleSubmit}>\n      {!isLogin && (\n        <Container>\n          <TitleName>\n            <span>Name: </span>\n            <InputName\n              type=\"text\"\n              name=\"name\"\n              placeholder={'Specify your name'}\n              required\n              onChange={handleChange}\n            />\n          </TitleName>\n        </Container>\n      )}\n      <Container>\n        <TitleName>\n          <span>Email: </span>\n          <InputName\n            type=\"email\"\n            name=\"email\"\n            placeholder={'Specify your email'}\n            required\n            onChange={handleChange}\n          />\n        </TitleName>\n      </Container>\n      <Container>\n        <TitleName>\n          <span>Password: </span>\n          <InputName\n            type=\"password\"\n            name=\"password\"\n            minLength={7}\n            placeholder={'Specify your password'}\n            required\n            onChange={handleChange}\n          />\n        </TitleName>\n      </Container>\n      <>\n        {isLoading && <Loader />}\n        <Btn type=\"submit\">{!isLogin ? 'Sign up' : 'Log in'}</Btn>\n      </>\n    </FormField>\n  );\n}\n","import { SignInForm } from 'components/SigninForm/SignInForm';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction Signin() {\n  const isLogin = useSelector(state => state.auth.isLoggedIn);\n  return <SignInForm isLogin={isLogin} />;\n}\n\nexport default Signin;\n"],"names":["FormField","styled","Container","TitleName","InputName","Btn","SignInForm","isLogin","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","isLoading","useSelector","selectIsLoadingAuth","user","selectUserName","useEffect","userMap","handleChange","event","target","value","onSubmit","preventDefault","loginRequest","registerRequest","type","placeholder","required","onChange","minLength","Loader","state","auth","isLoggedIn"],"sourceRoot":""}