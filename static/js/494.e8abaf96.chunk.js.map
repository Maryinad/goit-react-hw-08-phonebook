{"version":3,"file":"static/js/494.e8abaf96.chunk.js","mappings":"mNAEaA,EAAaC,EAAAA,GAAAA,GAAH,8HAQVC,EAAYD,EAAAA,GAAAA,GAAH,8HCRTE,EAAUF,EAAAA,GAAAA,GAAH,8HAQPG,EAAMH,EAAAA,GAAAA,OAAH,yN,6BCLT,SAASI,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,OAAQC,EAAM,EAANA,GACpCC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACP,EAAD,YACE,0BAAOG,KACP,gCAAQC,MACR,SAACH,EAAD,CAAKO,QAAS,kBARIC,EAQgBJ,OAPpCC,GAASI,EAAAA,EAAAA,IAAeD,IADJ,IAAAA,CAQJ,EAAd,sBAGL,C,sCCRM,SAASE,IACd,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAEpBV,GAAWC,EAAAA,EAAAA,OAEjBU,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,MACV,GAAE,CAACZ,IAEJ,IAAMa,GAAmBN,EAAAA,EAAAA,IAAYO,EAAAA,IAErC,OACE,gCACGR,IAAa,SAACS,EAAA,EAAD,IACH,OAAVN,IAAkB,0DACnB,wBACGI,EAAiBG,OAAS,GACzBH,EAAiBI,KAAI,gBAAGlB,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,+BACE,SAACF,EAAD,CAAaG,GAAIA,EAAaF,KAAMA,EAAMC,OAAQA,GAAxBC,IAFT,QAS9B,CCpCM,IAAMmB,EAAQ1B,EAAAA,GAAAA,GAAH,2GAOL2B,EAAa3B,EAAAA,GAAAA,MAAH,wP,UCHhB,SAAS4B,IACd,IAAMpB,GAAWC,EAAAA,EAAAA,MACXoB,GAAQd,EAAAA,EAAAA,IAAYe,EAAAA,IAM1B,OACE,iCACE,SAACJ,EAAD,oCACA,SAACC,EAAD,CACEI,KAAK,OACL1B,KAAK,SACL2B,SAViB,SAAAC,GACrBzB,GAAS0B,EAAAA,EAAAA,GAAgBD,EAAME,OAAON,OACvC,EASKA,MAAOA,MAId,C,0BCvBYO,EAAYpC,EAAAA,GAAAA,KAAH,wKASTqC,EAAYrC,EAAAA,GAAAA,MAAH,uGAOTsC,EAActC,EAAAA,GAAAA,MAAH,uGAOXuC,EAAYvC,EAAAA,GAAAA,MAAH,uHAOTwC,EAAcxC,EAAAA,GAAAA,MAAH,uHAOXG,EAAMH,EAAAA,GAAAA,OAAH,uNCzBT,SAASyC,IACd,IAAMjC,GAAWC,EAAAA,EAAAA,MAEXiC,GAAW3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAE7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOvC,EAAP,KAAawC,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOtC,EAAP,KAAewC,EAAf,KAEMC,EAAe,SAAAd,GACnB,MAAwBA,EAAME,OAAtB9B,EAAR,EAAQA,KAAMwB,EAAd,EAAcA,MACd,OAAQxB,GACN,IAAK,OACHwC,EAAQhB,EAAMmB,QACd,MAEF,IAAK,SACHF,EAAUjB,EAAMmB,QAMrB,EAmBKC,EAAQ,WACZJ,EAAQ,IACRC,EAAU,GACX,EAED,OACE,+BACE,UAACV,EAAD,CAAWc,SAxBM,SAAAjB,GAGnB,GAFAA,EAAMkB,iBAEFT,EAASU,MAAK,SAAAC,GAAO,OAAIA,EAAQhD,OAASA,CAArB,IACvBiD,MAAM,WAAD,OAAYjD,EAAZ,0BADP,CAIA,IAAMgD,EAAU,CACdhD,KAAAA,EACAC,OAAAA,GAGFE,GAAS+C,EAAAA,EAAAA,IAAYF,IAErBJ,GARC,CASF,EASG,WACE,SAACZ,EAAD,CAAWmB,QAAQ,GAAnB,mBACA,SAACjB,EAAD,CACER,KAAK,OACL1B,KAAK,OACL2B,SAAUe,EACVU,QAAQ,yHACRC,MAAM,yIACN7B,MAAOxB,EACPsD,UAAQ,KAEV,SAACrB,EAAD,CAAakB,QAAQ,GAArB,qBACA,SAAChB,EAAD,CACET,KAAK,MACL1B,KAAK,SACL2B,SAAUe,EACVlB,MAAOvB,EACPmD,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAAC,EAAD,CAAK5B,KAAK,SAAV,6BAIP,C,wBC1DD,MCzBA,SAA0B6B,EAAWC,GAYnC,OAX2B,SAAAC,GACzB,IAAMC,GAAahD,EAAAA,EAAAA,KAAY,SAAAiD,GAAK,OAAIA,EAAMC,KAAKF,UAAf,IAC9BG,GAAenD,EAAAA,EAAAA,KAAY,SAAAiD,GAAK,OAAIA,EAAMC,KAAKC,YAAf,IAEtC,OAAOH,IAAeG,GACpB,SAACN,GAAD,UAAeE,KAEf,SAAC,KAAD,CAAUK,GAAIN,GAEjB,CAGF,CDYD,EApBA,WACE,IAAMrD,GAAWC,EAAAA,EAAAA,MACX2D,GAAOrD,EAAAA,EAAAA,KAAY,SAAAiD,GAAK,OAAIA,EAAMC,KAAKI,SAAShE,IAAxB,IAO9B,OALAc,EAAAA,EAAAA,YAAU,WACK,OAATiD,GACJ5D,GAASY,EAAAA,EAAAA,MACV,GAAE,CAACZ,EAAU4D,KAGZ,iCACE,SAACrE,EAAD,yBACA,SAAC0C,EAAD,KACA,SAACxC,EAAD,wBACA,SAAC2B,EAAD,KACA,SAACf,EAAD,MAGL,GAEyC,U","sources":["components/App.styled.js","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhoneBook/PhoneBook.styled.js","components/PhoneBook/PhoneBook.jsx","pages/ContactsPage/Contacts.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhone = styled.h2`\n  text-align: center;\n  display: block;\n  font-size: 46px;\n  color: #2c3a47;\n  font-weight: 700;\n`;\n\nexport const TitleCont = styled.h2`\n  text-align: center;\n  display: block;\n  font-size: 46px;\n  color: #2c3a47;\n  font-weight: 700;\n`;\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  text-align: center;\n  display: block;\n  font-size: 26px;\n  color: #2c3a47;\n  font-weight: 700;\n`;\n\nexport const Btn = styled.button`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 8px 16px;\n  font-size: 22px;\n  font-weight: 700;\n  background-color: #fd7272;\n  color: white;\n  border-radius: 4px;\n  border: none;\n`;\n","import { Contact, Btn } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/phoneBook/phoneBookOperations';\n\nexport function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const deleteContact = contactId => {\n    dispatch(deleteContacts(contactId));\n  };\n\n  return (\n    <Contact>\n      <span>{name}</span>\n      <span> {number}</span>\n      <Btn onClick={() => deleteContact(id)}>Delete</Btn>\n    </Contact>\n  );\n}\n","import { ContactItem } from './ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/phoneBook/phoneBookOperations';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  selectError,\n  selectFilteredContact,\n  selectIsLoadingPhonebook,\n} from 'redux/selectors';\n\nexport function ContactList() {\n  const isLoading = useSelector(selectIsLoadingPhonebook);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(selectFilteredContact);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error !== null && <p>Ooops... something went wrong</p>}\n      <ul>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(({ id, name, number }) => (\n            <>\n              <ContactItem id={id} key={id} name={name} number={number} />\n              {/* <button onClick={() => onDeleteBtn(id)}>Delete</button> */}\n            </>\n          ))}\n      </ul>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  color: #fd7272;\n  text-align: center;\n`;\n\nexport const InputBlock = styled.input`\n  align-item: center;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 200px;\n  min-height: 30px;\n  border: 3px solid #2c3a47;\n  min-width: 200px;\n  min-height: 30px;\n  border-radius: 4px;\n`;\n","import React from 'react';\nimport { Title, InputBlock } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterAction } from 'redux/filter/filterSlice';\nimport { selectFilterValue } from 'redux/selectors';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilterValue);\n\n  const onFilterChange = event => {\n    dispatch(setFilterAction(event.target.value));\n  };\n\n  return (\n    <>\n      <Title>Find contact by name</Title>\n      <InputBlock\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilterChange}\n        value={value}\n      />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FormField = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  min-width: 300px;\n`;\n\nexport const TitleName = styled.label`\n  display: block;\n  font-size: 32px;\n  color: #fd7272;\n  font-weight: 700;\n`;\n\nexport const TitleNumber = styled.label`\n  display: block;\n  font-size: 32px;\n  color: #fd7272;\n  font-weight: 700;\n`;\n\nexport const InputName = styled.input`\n  border: 3px solid #2c3a47;\n  min-width: 200px;\n  min-height: 30px;\n  border-radius: 4px;\n`;\n\nexport const InputNumber = styled.input`\n  border: 3px solid #2c3a47;\n  min-width: 200px;\n  min-height: 30px;\n  border-radius: 4px;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  margin-top: 20px;\n  padding: 15px 25px;\n  font-size: 22px;\n  font-weight: 700;\n  background-color: #fd7272;\n  color: white;\n  border-radius: 4px;\n  border: none;\n`;\n","import React, { useState } from 'react';\nimport {\n  FormField,\n  TitleName,\n  TitleNumber,\n  InputName,\n  InputNumber,\n  Btn,\n} from './PhoneBook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContacts } from 'redux/phoneBook/phoneBookOperations';\nimport { selectContacts } from 'redux/selectors';\n\nexport function PhoneBook() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n\n      case 'number':\n        setNumber(value.trim());\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`Contact ${name} is already exist`);\n      return;\n    }\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContacts(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <FormField onSubmit={handleSubmit}>\n        <TitleName htmlFor=\"\">Name</TitleName>\n        <InputName\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          required\n        />\n        <TitleNumber htmlFor=\"\">Number</TitleNumber>\n        <InputNumber\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Btn type=\"submit\">Add contact</Btn>\n      </FormField>\n    </>\n  );\n}\n","import { TitleCont, TitlePhone } from 'components/App.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/phoneBook/phoneBookOperations';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.userData.name);\n\n  useEffect(() => {\n    if (user === null) return;\n    dispatch(getContacts());\n  }, [dispatch, user]);\n\n  return (\n    <>\n      <TitlePhone>Phonebook</TitlePhone>\n      <PhoneBook />\n      <TitleCont>Contacts</TitleCont>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default WithAuthRedirect(Contacts, '/log-in');\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ProtectedComponent = props => {\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n    const isRefreshing = useSelector(state => state.auth.isRefreshing);\n\n    return isLoggedIn && !isRefreshing ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n\n  return ProtectedComponent;\n}\n\nexport default WithAuthRedirect;\n"],"names":["TitlePhone","styled","TitleCont","Contact","Btn","ContactItem","name","number","id","dispatch","useDispatch","onClick","contactId","deleteContacts","ContactList","isLoading","useSelector","selectIsLoadingPhonebook","error","selectError","useEffect","getContacts","filteredContacts","selectFilteredContact","Loader","length","map","Title","InputBlock","Filter","value","selectFilterValue","type","onChange","event","setFilterAction","target","FormField","TitleName","TitleNumber","InputName","InputNumber","PhoneBook","contacts","selectContacts","useState","setName","setNumber","handleChange","trim","reset","onSubmit","preventDefault","some","contact","alert","addContacts","htmlFor","pattern","title","required","Component","navigateTo","props","isLoggedIn","state","auth","isRefreshing","to","user","userData"],"sourceRoot":""}